import {Bittrex} from "../remote/bittrex";
import {CurrencyPair} from "../types/CurrencyPair";
import {OrderBook} from "./OrderBook";
import {CombinedOrderBook} from "./CombinedOrderBook";
import {Poloniex} from "../remote/poloniex";

export class OrderBookManager {
  /**
   * Currency pairs for which to generate combined order books
   * */
  pairs: CurrencyPair[] = Object.values(CurrencyPair);

  /**
   * Exchange clients
   * Each has its own copy of the order books for each of the currency pairs
   * */
  private poloniex: Poloniex
  private bittrex: Bittrex;
  /**
   * Combined order books for each currency pair
   * Generated by combining bittrex and poloniex data
   * */
  books: { [pair in CurrencyPair]: CombinedOrderBook }

  constructor(bittrex: Bittrex, poloniex: Poloniex) {
    this.bittrex = bittrex;
    this.poloniex = poloniex;
    this.books = {
      [CurrencyPair.BTC_ETH]: new CombinedOrderBook(this.bittrex.BTC_ETH, this.poloniex.BTC_ETH),
      [CurrencyPair.BTC_DOGE]: new CombinedOrderBook(this.bittrex.BTC_DOGE, this.poloniex.BTC_DOGE)
    };
  }


}